#!/bin/bash

# Run ./lextest to test all the test cases. Use the --log option to log the failed tests
#       Use the --nosemantic option to turn off semantic error tests
#       Use the --nosyntax option to turn off the syntax error tests
#       Use the --novalid option to turn off testing for valid cases

log=false
test_syntax=true
test_semantic=true
test_valid=true

while [ $# -gt 0 ] ; do
  case $1 in
    --log) log=true ;;
    --novalid) test_valid=false ;;
    --nosemantic) test_semantic=false ;;
    --nosyntax) test_syntax=false ;;
  esac
  shift
done

# formatting tools
black="\033[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[93m"
blue="\033[36m"
purple="\033[95m"
invert="\033[7m"
normal="\033[0m"

if [[ ! -d "src/main/java/antlr" ]]; then
  echo -e "${invert}${red}Need to run ${purple}\"make\"${red} to test lexer...${normal} Exiting..."
  exit 1;
fi

mkdir test_temp
trap "{ rm -rf test_temp; }" EXIT

test ()
{
  echo "----------------------------------"
  echo -e "${invert}${blue}Testing:${normal} ${yellow}$1${normal}"
  ./grun antlr.WACC program "$1" > test_temp/output 2>&1;
  if [[ ($2 == "-valid" ) && ("$(cat test_temp/output)" != "running the ANTLR TestRig grammar tool") ]]; then
    echo -e "${invert}${red}TEST FAILURE:${normal}\n"
    echo -e "${red}Test had the following output:\n${yellow}$(cat test_temp/output)${normal}"
    echo "$1" >> test_temp/failedfilestemp
  elif [[ ($2 == "-invalid") && ("$(cat test_temp/output)" == "running the ANTLR TestRig grammar tool") ]]; then
    echo -e "${invert}${red}TEST UNEXPECTEDLY SUCCEEDED:${normal} ${yellow}$1${normal}"
    echo "$1" >> test_temp/failedfilestemp
  else
    echo -e "${green}Test passed.${normal}"
  fi
  echo "----------------------------------"
}

export -f test


if  $test_valid  || $test_semantic || $test_syntax ; then
  echo testing valid: $test_valid
  if $test_valid ; then
    find testcases/valid -type f -iname '*.wacc' -exec bash -c 'test "$1" -valid' bash {} \;
  fi
  if $test_semantic ; then
    find testcases/invalid/syntaxErr -type f -iname '*.wacc' -exec bash -c 'test "$1" -invalid' bash {} \;
  fi
  if $test_syntax ; then
    find testcases/invalid/semanticErr -type f -iname '*.wacc' -exec bash -c 'test "$1" -invalid' bash {} \;
  fi
fi

unset test

if [ ! -f test_temp/failedfilestemp ] ; then
  echo "----------------------------------"
  echo "----------------------------------"
  echo -e "${invert}${green}All tests passed...${normal}"
  if $log ; then
    mkdir -p test_logs
    echo "ALL tests passed..." >> "test_logs/testfailures_$(date +%F_%R)"
  fi
  exit 0
else
  echo -e "${invert}${yellow}The following files failed the tests:${normal}${red}"
  cat test_temp/failedfilestemp
  echo -e "${normal}----------------------------------"
  # from https://askubuntu.com/questions/454564/count-total-number-of-files-in-particular-directory-with-specific-extension
  total=$(find testcases -mindepth 1 -type f -name "*.wacc" -exec printf x \; | wc -c)
  failed=$(wc -l test_temp/failedfilestemp | awk '{print $1}');
  difference="$((total - failed))"
  percentage="$((difference * 100 / total ))"
  echo "coverage: $percentage% ($difference / $total)"

  if $log ; then
    mkdir -p test_logs
    cp test_temp/failedfilestemp "test_logs/testfailures_$(date +%F_%R)"
    echo "coverage: $percentage% ($difference / $total)" >> "test_logs/testfailures_$(date +%F_%R)"
  fi
  exit 0
fi
