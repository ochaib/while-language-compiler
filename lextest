#!/bin/bash

# Run ./lextest to test all the test cases. Use the --log option to log the failed tests
#       Use the --nosemantic option to turn off semantic error tests
#       Use the --nosyntax option to turn off the syntax error tests

log=false
no_syntax=false
no_semantic=false

while [ $# -gt 0 ] ; do
  case $1 in
    --log) log=true ;;
    --nosemantic) no_semantic=true ;;
    --nosyntax) no_syntax=true ;;
  esac
  shift
done

# formatting tools
black="\033[30m"
red="\033[31m"
green="\033[32m"
yellow="\033[93m"
blue="\033[36m"
purple="\033[95m"
invert="\033[7m"
normal="\033[0m"

if [[ ! -d "src/main/java/antlr" ]]; then
  echo -e "${invert}${red}Need to run ${purple}\"make\"${red} to test lexer...${normal} Exiting..."
  exit 1;
fi

mkdir test_temp
trap "{ rm -rf test_temp; }" EXIT

test ()
{
  echo "----------------------------------"
  echo -e "${invert}${blue}Testing:${normal} ${yellow}$1${normal}"
  ./grun antlr.WACC program "$1" > test_temp/output 2>&1;
  if [[ ($2 == "-valid" ) && ("$(cat test_temp/output)" != "running the ANTLR TestRig grammar tool") ]]; then
    echo -e "${invert}${red}TEST FAILURE:${normal}\n"
    echo -e "${red}Test had the following output:\n${yellow}$(cat test_temp/output)${normal}"
    echo "$1" >> test_temp/failedfilestemp
  elif [[ ($2 == "-invalid") && ("$(cat test_temp/output)" == "running the ANTLR TestRig grammar tool") ]]; then
    echo -e "${invert}${red}TEST UNEXPECTEDLY SUCCEEDED:${normal} ${yellow}$1${normal}"
    echo "$1" >> test_temp/failedfilestemp
  else
    echo -e "${green}Test passed.${normal}"
  fi
  echo "----------------------------------"
}

export -f test

find testcases/valid -type f -iname '*.wacc' -exec bash -c 'test "$1" -valid' bash {} \;

if [ $no_semantic ]; then
  find testcases/invalid/syntaxErr -type f -iname '*.wacc' -exec bash -c 'test "$1" -invalid' bash {} \;
elif [ $no_syntax ]; then
  find testcases/invalid/semanticErr -type f -iname '*.wacc' -exec bash -c 'test "$1" -invalid' bash {} \;
else
  find testcases/invalid -type f -iname '*.wacc' -exec bash -c 'test "$1" -invalid' bash {} \;
fi

unset test

if [ ! -f test_temp/failedfilestemp ] ; then
  echo "----------------------------------"
  echo "----------------------------------"
  echo -e "${invert}${green}All tests passed...${normal}"
  if [ "$1" == "-log" ]; then
    mkdir -p test_logs
    echo "ALL tests passed..." >> "test_logs/testfailures_$(date +%F_%R)"
  fi
  exit 0
else
  echo -e "${invert}${yellow}The following files failed the tests:${normal}${red}"
  cat test_temp/failedfilestemp
  echo -e "${normal}----------------------------------"
  if [ $log ]; then
    mkdir -p test_logs
    cp test_temp/failedfilestemp "test_logs/testfailures_$(date +%F_%R)"
  fi
  exit 1
fi
